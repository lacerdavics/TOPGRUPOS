rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ==============================
    // USERS
    // ==============================
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // ==============================
    // GROUPS
    // ==============================
    match /groups/{groupId} {
      allow read: if true;

      allow create: if request.auth != null
        && request.resource.data.userId == request.auth.uid
        && isValidGroup();

      // update ainda precisa validar dados
      allow update: if request.auth != null
        && (resource.data.userId == request.auth.uid || isAdmin())
        && isValidGroup();

      // Allow auto image update service to update specific fields
      allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly(['profileImage', 'imageUpdatedAt', 'imageCorrectedAt', 'autoUpdated']);

      // Allow auto image update service to update specific fields by unauthenticated users
      // WARNING: This rule allows any unauthenticated user to modify these specific fields on any group.
      allow update: if request.auth == null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['profileImage', 'imageUpdatedAt', 'imageCorrectedAt', 'autoUpdated']);

      // delete não precisa validar dados, só verificar dono ou admin
      allow delete: if request.auth != null
        && (resource.data.userId == request.auth.uid || isAdmin());
    }

    // ==============================
    // FUNCTIONS
    // ==============================
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function isValidGroup() {
      return request.resource.data.name is string
        && request.resource.data.category is string
        && request.resource.data.telegramUrl is string
        && request.resource.data.profileImage is string
        && request.resource.data.createdAt is timestamp
        && request.resource.data.hasCustomPhoto is bool
        && request.resource.data.membersCount is int
        && request.resource.data.approved is bool
        &&
        (
          // Caso 1: grupo aprovado (admin OU usuário comum com foto personalizada)
          (request.resource.data.approved == true
            && (isAdmin() || request.resource.data.hasCustomPhoto == true))
          ||
          // Caso 2: grupo pendente (qualquer usuário pode criar)
          request.resource.data.approved == false
        );
    }

    // ==============================
    // REPORTS
    // ==============================
    match /reports/{reportId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.groupId is string
        && request.resource.data.reason is string
        && request.resource.data.createdAt is timestamp;
    }

    // ==============================
    // STATS
    // ==============================
    match /stats/{docId} {
      allow read: if true;
      allow write: if true;
    }

    // ==============================
    // IMAGE CACHE
    // ==============================
    match /imageCache/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // ==============================
    // NOTIFICATIONS
    // ==============================
    match /notifications/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // ==============================
    // POPULAR GROUPS
    // ==============================
    match /popularGroups/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // ==============================
    // PROMOTIONS
    // ==============================
    match /promotions/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // ==============================
    // BANNERS
    // ==============================
    match /banners/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // ==============================
    // VISITS
    // ==============================
    match /visits/{visitId} {
      allow create: if true;
    }
  }
}