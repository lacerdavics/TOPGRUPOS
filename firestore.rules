rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ==============================
    // USERS
    // ==============================
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // ==============================
    // GROUPS
    // ==============================
    match /groups/{groupId} {
      allow read: if true;

      allow create: if request.auth != null
        && request.resource.data.userId == request.auth.uid
        && isValidGroup();

      allow update: if request.auth != null
        && (resource.data.userId == request.auth.uid || isAdmin())
        && isValidGroup();

      // Allow admin recategorization updates
      allow update: if request.auth != null
        && isAdmin()
        && isRecategorizationUpdate();

      // Allow admin suspension updates
      allow update: if request.auth != null
        && isAdmin()
        && isSuspensionUpdate();

      // Auto image update service
      allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly(
        ['profileImage', 'imageUpdatedAt', 'imageCorrectedAt', 'autoUpdated']
      );

      // Unauthenticated auto image update (⚠️ cuidado!)
      allow update: if request.auth == null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(
        ['profileImage', 'imageUpdatedAt', 'imageCorrectedAt', 'autoUpdated']
      );

      allow delete: if request.auth != null
        && (resource.data.userId == request.auth.uid || isAdmin());
    }

    // ==============================
    // REPORTS
    // ==============================
    match /reports/{reportId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.groupId is string
        && request.resource.data.reason is string
        && request.resource.data.createdAt is timestamp;
    }

    // ==============================
    // STATS (agregadas)
    // ==============================
    match /stats/{docId} {
      allow read: if true;
      allow write: if request.auth != null;
      allow create, update: if request.auth == null 
        && request.resource.data.keys().hasAll(['date', 'visits', 'timestamp'])
        && request.resource.data.keys().hasOnly(['date', 'visits', 'timestamp', 'uniqueVisitors']);
      allow create, update: if request.auth == null 
        && request.resource.data.keys().hasAll(['date', 'visits', 'timestamp'])
        && request.resource.data.keys().hasOnly(['date', 'visits', 'timestamp', 'uniqueVisitors']);
    }

    // ==============================
    // IMAGE CACHE
    // ==============================
    match /imageCache/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // ==============================
    // NOTIFICATIONS (geral do sistema)
    // ==============================
    match /notifications/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // ==============================
    // EXPIRED LINK NOTIFICATIONS (fluxo que ajustamos)
    // ==============================
    match /expired_link_notifications/{docId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update: if request.auth != null && resource.data.userId == request.auth.uid;
      allow delete: if false; // não permitir deletar
    }

    // ==============================
    // POPULAR GROUPS
    // ==============================
    match /popularGroups/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // ==============================
    // PROMOTIONS
    // ==============================
    match /promotions/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // ==============================
    // BANNERS
    // ==============================
    match /banners/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // ==============================
    // VISITS (logs individuais)
    // ==============================
    match /visits/{visitId} {
      allow create: if true;
      allow read, update, delete: if false;
    }

    // ==============================
    // ADMIN CONFIG
    // ==============================
    match /admin_config/{docId} {
      allow read: if true;
    }

    // ==============================
    // FUNCTIONS AUX
    // ==============================
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function isRecategorizationUpdate() {
      let affectedKeys = request.resource.data.diff(resource.data).affectedKeys();
      return affectedKeys.hasOnly(['category', 'updatedAt']) ||
             affectedKeys.hasOnly(['category']) ||
             (affectedKeys.size() <= 3 && 
              affectedKeys.hasAny(['category']) && 
              affectedKeys.hasAll(['category']));
    }

    function isSuspensionUpdate() {
      let affectedKeys = request.resource.data.diff(resource.data).affectedKeys();
      return affectedKeys.hasOnly(['approved', 'suspendedAt', 'suspendedBy']) ||
             affectedKeys.hasOnly(['approved']) ||
             (affectedKeys.size() <= 4 && 
              affectedKeys.hasAny(['approved', 'suspendedAt', 'suspendedBy']));
    }

    function isValidGroup() {
      return request.resource.data.name is string
        && request.resource.data.category is string
        && request.resource.data.telegramUrl is string
        && request.resource.data.profileImage is string
        && request.resource.data.createdAt is timestamp
        && request.resource.data.hasCustomPhoto is bool
        && request.resource.data.membersCount is int
        && request.resource.data.approved is bool
        &&
        (
          (request.resource.data.approved == true
            && (isAdmin() || request.resource.data.hasCustomPhoto == true))
          ||
          request.resource.data.approved == false
        );
    }
  }
}
